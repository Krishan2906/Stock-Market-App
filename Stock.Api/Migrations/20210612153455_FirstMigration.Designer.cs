// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock.Api.DbContexts;

namespace Stock.Api.Migrations
{
    [DbContext(typeof(StocksContext))]
    [Migration("20210612153455_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stock.Api.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Stock.Api.Entities.Companies", b =>
                {
                    b.Property<int>("CompanyStockCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BriefWriteup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sectors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Turnover")
                        .HasColumnType("real");

                    b.HasKey("CompanyStockCode");

                    b.ToTable("Comapnies");
                });

            modelBuilder.Entity("Stock.Api.Entities.StockExchanges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockExchangeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactAddressId");

                    b.ToTable("StockExchanges");
                });

            modelBuilder.Entity("Stock.Api.Entities.StockPrices", b =>
                {
                    b.Property<int>("StockExchangeId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyStockCode")
                        .HasColumnType("int");

                    b.Property<float>("CurrentPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("StockExchangeId", "CompanyStockCode");

                    b.HasIndex("CompanyStockCode");

                    b.ToTable("StockPrices");
                });

            modelBuilder.Entity("Stock.Api.Entities.Test1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CollegeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Stock.Api.Entities.Test2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dean")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("College");
                });

            modelBuilder.Entity("Stock.Api.Entities.StockExchanges", b =>
                {
                    b.HasOne("Stock.Api.Entities.Address", "ContactAddress")
                        .WithMany()
                        .HasForeignKey("ContactAddressId");

                    b.Navigation("ContactAddress");
                });

            modelBuilder.Entity("Stock.Api.Entities.StockPrices", b =>
                {
                    b.HasOne("Stock.Api.Entities.Companies", "Companies")
                        .WithMany("StockPrices")
                        .HasForeignKey("CompanyStockCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock.Api.Entities.StockExchanges", "StockExchanges")
                        .WithMany("StockPrices")
                        .HasForeignKey("StockExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("StockExchanges");
                });

            modelBuilder.Entity("Stock.Api.Entities.Test1", b =>
                {
                    b.HasOne("Stock.Api.Entities.Test2", "College")
                        .WithMany("Students")
                        .HasForeignKey("CollegeId");

                    b.Navigation("College");
                });

            modelBuilder.Entity("Stock.Api.Entities.Companies", b =>
                {
                    b.Navigation("StockPrices");
                });

            modelBuilder.Entity("Stock.Api.Entities.StockExchanges", b =>
                {
                    b.Navigation("StockPrices");
                });

            modelBuilder.Entity("Stock.Api.Entities.Test2", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
